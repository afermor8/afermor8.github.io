<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mi paso por ASIR Blog</title>
    <link>https://afermor8.github.io/post/</link>
    <description>Recent content in Posts on Mi paso por ASIR Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>ara.fer.mor@gmail.com (afermor8)</managingEditor>
    <webMaster>ara.fer.mor@gmail.com (afermor8)</webMaster>
    <lastBuildDate>Wed, 01 Mar 2023 12:18:27 +0100</lastBuildDate><atom:link href="https://afermor8.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Movimiento de datos</title>
      <link>https://afermor8.github.io/post/movdatos/</link>
      <pubDate>Wed, 01 Mar 2023 12:18:27 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/movdatos/</guid>
      <description>Movimiento de datos. Exportación e importación Creando el esquema Scott rlwrap sqlplus / as sysdba startup alter session set &amp;#34;_ORACLE_SCRIPT&amp;#34;=true; SET ECHO OFF -- Si ya estaba creado el esquema Scott pero lo queremos crear de nuevo borramos el usario con la opción cascade DROP USER SCOTT CASCADE; -- Creamos y damos privilegios a SCOTT, cuya contraseña es TIGER y finalmente nos conectamos con SCOTT/TIGER GRANT CONNECT, RESOURCE, UNLIMITED TABLESPACE TO SCOTT IDENTIFIED BY TIGER; ALTER USER SCOTT ACCOUNT UNLOCK; ALTER USER SCOTT DEFAULT TABLESPACE USERS; ALTER USER SCOTT TEMPORARY TABLESPACE TEMP; CONN SCOTT/TIGER -- Creación de las tablas de SCOTT CREATE TABLE DUMMY (DUMMY NUMBER); CREATE TABLE DEPT ( DEPTNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY, DNAME VARCHAR2(14), LOC VARCHAR2(13)); CREATE TABLE EMP ( EMPNO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY, ENAME VARCHAR2(10), JOB VARCHAR2(9), MGR NUMBER(4), HIREDATE DATE, SAL NUMBER(7,2), COMM NUMBER(7,2), DEPTNO NUMBER(2) CONSTRAINT FK_DEPTNO REFERENCES DEPT); CREATE TABLE BONUS ( ENAME VARCHAR2(10), JOB VARCHAR2(9), SAL NUMBER, COMM NUMBER); CREATE TABLE SALGRADE ( GRADE NUMBER, LOSAL NUMBER, HISAL NUMBER); -- Inserción de datos en las tablas INSERT INTO DEPT VALUES (10,&amp;#39;ACCOUNTING&amp;#39;,&amp;#39;NEW YORK&amp;#39;); INSERT INTO DEPT VALUES (20,&amp;#39;RESEARCH&amp;#39;,&amp;#39;DALLAS&amp;#39;); INSERT INTO DEPT VALUES (30,&amp;#39;SALES&amp;#39;,&amp;#39;CHICAGO&amp;#39;); INSERT INTO DEPT VALUES (40,&amp;#39;OPERATIONS&amp;#39;,&amp;#39;BOSTON&amp;#39;); INSERT INTO EMP VALUES (7369,&amp;#39;SMITH&amp;#39;,&amp;#39;CLERK&amp;#39;,7902,to_date(&amp;#39;17-12-1980&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),800,NULL,20); INSERT INTO EMP VALUES (7499,&amp;#39;ALLEN&amp;#39;,&amp;#39;SALESMAN&amp;#39;,7698,to_date(&amp;#39;20-2-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1600,300,30); INSERT INTO EMP VALUES (7521,&amp;#39;WARD&amp;#39;,&amp;#39;SALESMAN&amp;#39;,7698,to_date(&amp;#39;22-2-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1250,500,30); INSERT INTO EMP VALUES (7566,&amp;#39;JONES&amp;#39;,&amp;#39;MANAGER&amp;#39;,7839,to_date(&amp;#39;2-4-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),2975,NULL,20); INSERT INTO EMP VALUES (7654,&amp;#39;MARTIN&amp;#39;,&amp;#39;SALESMAN&amp;#39;,7698,to_date(&amp;#39;28-9-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1250,1400,30); INSERT INTO EMP VALUES (7698,&amp;#39;BLAKE&amp;#39;,&amp;#39;MANAGER&amp;#39;,7839,to_date(&amp;#39;1-5-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),2850,NULL,30); INSERT INTO EMP VALUES (7782,&amp;#39;CLARK&amp;#39;,&amp;#39;MANAGER&amp;#39;,7839,to_date(&amp;#39;9-6-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),2450,NULL,10); INSERT INTO EMP VALUES (7788,&amp;#39;SCOTT&amp;#39;,&amp;#39;ANALYST&amp;#39;,7566,to_date(&amp;#39;13-JUL-87&amp;#39;)-85,3000,NULL,20); INSERT INTO EMP VALUES (7839,&amp;#39;KING&amp;#39;,&amp;#39;PRESIDENT&amp;#39;,NULL,to_date(&amp;#39;17-11-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),5000,NULL,10); INSERT INTO EMP VALUES (7844,&amp;#39;TURNER&amp;#39;,&amp;#39;SALESMAN&amp;#39;,7698,to_date(&amp;#39;8-9-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1500,0,30); INSERT INTO EMP VALUES (7876,&amp;#39;ADAMS&amp;#39;,&amp;#39;CLERK&amp;#39;,7788,to_date(&amp;#39;13-JUL-87&amp;#39;)-51,1100,NULL,20); INSERT INTO EMP VALUES (7900,&amp;#39;JAMES&amp;#39;,&amp;#39;CLERK&amp;#39;,7698,to_date(&amp;#39;3-12-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),950,NULL,30); INSERT INTO EMP VALUES (7902,&amp;#39;FORD&amp;#39;,&amp;#39;ANALYST&amp;#39;,7566,to_date(&amp;#39;3-12-1981&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),3000,NULL,20); INSERT INTO EMP VALUES (7934,&amp;#39;MILLER&amp;#39;,&amp;#39;CLERK&amp;#39;,7782,to_date(&amp;#39;23-1-1982&amp;#39;,&amp;#39;dd-mm-yyyy&amp;#39;),1300,NULL,10); INSERT INTO SALGRADE VALUES (1,700,1200); INSERT INTO SALGRADE VALUES (2,1201,1400); INSERT INTO SALGRADE VALUES (3,1401,2000); INSERT INTO SALGRADE VALUES (4,2001,3000); INSERT INTO SALGRADE VALUES (5,3001,9999); INSERT INTO DUMMY VALUES (0); COMMIT; SET TERMOUT ON SET ECHO ON 1.</description>
    </item>
    
    <item>
      <title>Auditoría</title>
      <link>https://afermor8.github.io/post/auditoria/</link>
      <pubDate>Mon, 20 Feb 2023 11:31:49 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/auditoria/</guid>
      <description>1. Activa desde SQL*Plus la auditoría de los intentos de acceso exitosos al sistema. Comprueba su funcionamiento. Podemos ver los parámetros de auditoria con show parameter audit o haciendo una consulta a v$parameter.
show parameter audit NAME TYPE VALUE ------------------------------------ ----------- ------------------------------ audit_file_dest string /opt/oracle/admin/ORCLCDB/adump audit_syslog_level string audit_sys_operations boolean TRUE audit_trail string DB unified_audit_common_systemlog string unified_audit_sga_queue_size integer 1048576 unified_audit_systemlog string SELECT name, value FROM v$parameter WHERE name like &amp;#39;audit_trail&amp;#39;; NAME -------------------------------------------------------------------------------- VALUE -------------------------------------------------------------------------------- audit_trail DB Vemos que el parámetro audit_trail está activado ya que su valor es &amp;lsquo;DB&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Informática Forense</title>
      <link>https://afermor8.github.io/post/forense/</link>
      <pubDate>Mon, 06 Feb 2023 12:50:51 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/forense/</guid>
      <description>Descripción La informática forense es el conjunto de técnicas que nos permite obtener la máxima información posible tras un incidente o delito informático.
En esta práctica, realizarás la fase de toma de evidencias y análisis de las mismas sobre una máquina Linux y otra Windows. Supondremos que pillamos al delincuente in fraganti y las máquinas se encontraban encendidas. Opcionalmente, podéis realizar el análisis de un dispositivo Android.
Sobre cada una de las máquinas debes realizar un volcado de memoria y otro de disco duro, tomando las medidas necesarias para certificar posteriormente la cadena de custodia.</description>
    </item>
    
    <item>
      <title>Despliegue de aplicaciones Python (Django)</title>
      <link>https://afermor8.github.io/post/django/</link>
      <pubDate>Thu, 26 Jan 2023 10:51:57 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/django/</guid>
      <description>Tarea 1: Entorno de desarrollo Vamos a desplegar la aplicación del tutorial de django. Como entorno de desarrollo tienes dos opciones:
Que tu entorno de desarrollo se la máquina bravo de tu entorno de desarrollo. Opción que dará más puntos.
Que tu entorno de desarrollo sea una máquina de openstack con el sistema operativo que quieras. Opción que dará menos puntos.
Vamos a configurar tu equipo como entorno de desarrollo para trabajar con la aplicación, para ello:</description>
    </item>
    
    <item>
      <title>Vpn. Redes Privadas Virtuales</title>
      <link>https://afermor8.github.io/post/vpn/</link>
      <pubDate>Tue, 24 Jan 2023 18:15:29 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/vpn/</guid>
      <description>VPN. Redes Privadas Virtuales A) VPN de acceso remoto con OpenVPN y certificados x509 (5 puntos) Configura una conexión VPN de acceso remoto entre dos equipos del cloud:
Uno de los dos equipos (el que actuará como servidor) estará conectado a dos redes. Para la autenticación de los extremos se usarán obligatoriamente certificados digitales, que se generarán utilizando openssl y se almacenarán en el directorio /etc/openvpn, junto con los parámetros Diffie-Helman y el certificado de la propia Autoridad de Certificación.</description>
    </item>
    
    <item>
      <title>Criptografía III. Certificados digiales. HTTPS</title>
      <link>https://afermor8.github.io/post/cripto3/</link>
      <pubDate>Wed, 11 Jan 2023 13:42:27 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/cripto3/</guid>
      <description>Certificado digital de persona física Tarea 1: Instalación del certificado 1. Una vez que hayas obtenido tu certificado, explica brevemente como se instala en tu navegador favorito Este punto lo explico junto al siguiente punto para mostrar las capturas.
2. Muestra una captura de pantalla donde se vea las preferencias del navegador donde se ve instalado tu certificado Una vez tenemos el certificado digital, para agregarlo a Google Chrome vamos a los tres puntos de la barra superior y hacemos click en Configuración.</description>
    </item>
    
    <item>
      <title>Criptografía II. Integridad, firmas y autenticación</title>
      <link>https://afermor8.github.io/post/cripto2/</link>
      <pubDate>Mon, 19 Dec 2022 18:29:33 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/cripto2/</guid>
      <description>Tarea 1: Firmas electrónicas. En este primer apartado vamos a trabajar con las firmas electrónicas, para ello te pueden ayudar los siguientes enlaces:
Intercambiar claves Validar otras claves en nuestro anillo de claves públicas Firmado de claves (Debian) GPG
1. Manda un documento y la firma electrónica del mismo a un compañero. Verifica la firma que tú has recibido Antes de empezar he generado un par de claves con gpg --full-gen-key.</description>
    </item>
    
    <item>
      <title>Criptografia I. Cifrado asimétrico con gpg y openssl</title>
      <link>https://afermor8.github.io/post/criptografia1/</link>
      <pubDate>Sun, 04 Dec 2022 22:05:16 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/criptografia1/</guid>
      <description>Tarea 1: Generación de claves 1. Genera un par de claves (pública y privada). ¿En que directorio se guarda las claves de un usuario? Para generar las claves utilizamos el siguiente comando:
gpg --gen-key Nos pedirá nombre y apellidos, correo electrónico y confirmación. Lo próximo que nos pedirá será una frase de paso para proteger la clave privada. La escribimos dos veces y a continuación se generará el par de claves.</description>
    </item>
    
    <item>
      <title>Interconexion entre BBDD</title>
      <link>https://afermor8.github.io/post/interconexion-bbdd/</link>
      <pubDate>Thu, 24 Nov 2022 13:58:18 +0100</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/interconexion-bbdd/</guid>
      <description>1. Interconexión entre dos bases de datos PostgreSQL. 1.1 Creación de la base de datos y usuario Voy a usar el servidor de base de datos PostgreSQL creado en la primera práctica, que tiene la base de datos &amp;ldquo;maravilla&amp;rdquo; con el usuario &amp;ldquo;admin&amp;rdquo;. Esta base de datos se encuentra en una máquina llamada debian-oracle con IP 192.168.122.98.
Voy a crear otra base de datos PostgreSQL en otra máquina llamada debian con IP 192.</description>
    </item>
    
    <item>
      <title>Sistemas Gestores de Bases de Datos MySQL, PostgreSQL, Oracle 19c (en Debian11) y MongoDB</title>
      <link>https://afermor8.github.io/post/install-bbdd/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/install-bbdd/</guid>
      <description>Alumno 3. Arantxa Fernández Morató Antes de empezar comentar que la máquina servidor de todas las bases de datos será siempre la misma, una máquina con Debian 11 llamada &amp;ldquo;debian-oracle&amp;rdquo;. Y la maquina cliente se llama &amp;ldquo;debianprueba&amp;rdquo;. Durante las conexiones remotas se puede apreciar en las capturas el nombre de las máquinas.
1. MySQL 1.1 Instalación En el servidor actualizamos los repositorios e instalamos gnupg y wget, si no estuvieran ya instalados.</description>
    </item>
    
    <item>
      <title>Instalación Debian 11</title>
      <link>https://afermor8.github.io/post/install-deb/</link>
      <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
      <author>ara.fer.mor@gmail.com (afermor8)</author>
      <guid>https://afermor8.github.io/post/install-deb/</guid>
      <description>Preparación Para empezar he booteado un usb con la imagen de Debian 11 con la herramienta Rufus. Mi portátil es un Lenovo Thinkpa L15 con 1TB de almacenamiento y 40GB de RAM. Antes de realizar la instalación he dejado libre la mitad de mi disco de 1TB. Es decir, 500GB del disco están destinados a Windows 10, por lo que para la instalación de Debian 11 tengo disponibles l500GB de espacio libre.</description>
    </item>
    
  </channel>
</rss>
